{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select  * from metadata;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Gettablelist_Lookup",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get Metadata1",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_METADATA_SRC",
									"type": "DatasetReference",
									"parameters": {
										"Schema_src": {
											"value": "@item().schemaname",
											"type": "Expression"
										},
										"tablename_src": {
											"value": "@item().tablename",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								]
							}
						},
						{
							"name": "If Condition1",
							"description": "use output of getmetadata activity",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('Get Metadata1').output.exists",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 60
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_METADATA_SRC",
												"type": "DatasetReference",
												"parameters": {
													"Schema_src": {
														"value": "@item().schemaname\n\n",
														"type": "Expression"
													},
													"tablename_src": {
														"value": "@item().tablename",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_sink",
												"type": "DatasetReference",
												"parameters": {
													"desti_Blobcontainer": {
														"value": "@item().blobcontainer",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Stored procedure_Sucess",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[PIPELINE_LOG_USP]",
											"storedProcedureParameters": {
												"COPYACTIVITY_END_TIME": {
													"value": {
														"value": "@activity('Copy data1').ExecutionEndTime\n",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"COPYACTIVITY_START_TIME": {
													"value": {
														"value": "@activity('Copy data1').ExecutionStartTime\n",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"COPYDURATION_IN_SECS": {
													"value": {
														"value": "@activity('Copy data1').output.copyDuration\n",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"DATAFACTORY_NAME": {
													"value": {
														"value": "@pipeline().DataFactory\n",
														"type": "Expression"
													},
													"type": "String"
												},
												"DESTINATION": {
													"value": {
														"value": "@item().BLOBCONTAINER",
														"type": "Expression"
													},
													"type": "String"
												},
												"EFFECTIVEINTERGATIONRUNTIME": {
													"value": {
														"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
														"type": "Expression"
													},
													"type": "String"
												},
												"ERROR_MESSAGE": {
													"value": {
														"value": "@activity('Copy data1').error",
														"type": "Expression"
													},
													"type": "String"
												},
												"EXECUTION_STATUS": {
													"value": {
														"value": "@activity('Copy data1').status",
														"type": "Expression"
													},
													"type": "String"
												},
												"EXECUTION_STATUS_CODE": {
													"value": {
														"value": "@activity('Copy data1').statuscode",
														"type": "Expression"
													},
													"type": "String"
												},
												"NO_PARALLELCOPIES": {
													"value": {
														"value": "@activity('Copy data1').output.usedParallelCopies",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"PIPELINENAME": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"ROWSCOPIED": {
													"value": {
														"value": "@activity('Copy data1').output.rowscopied",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"ROWSREAD": {
													"value": {
														"value": "@activity('Copy data1').output.rowsread",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"RUNID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"SINK_TYPE": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].sink.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"SOURCE": {
													"value": {
														"value": "@item().TABLENAME",
														"type": "Expression"
													},
													"type": "String"
												},
												"SOURCE_TYPE": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].source.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERID": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERNAME": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERTIME": {
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERTYPE": {
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_AZURE",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Stored procedure_Failure",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[PIPELINE_LOG_USP]",
											"storedProcedureParameters": {
												"COPYACTIVITY_END_TIME": {
													"value": {
														"value": "@activity('Copy data1').ExecutionEndTime\n",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"COPYACTIVITY_START_TIME": {
													"value": {
														"value": "@activity('Copy data1').ExecutionStartTime\n",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"COPYDURATION_IN_SECS": {
													"value": {
														"value": "@activity('Copy data1').output.copyDuration\n",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"DATAFACTORY_NAME": {
													"value": {
														"value": "@pipeline().DataFactory\n",
														"type": "Expression"
													},
													"type": "String"
												},
												"DESTINATION": {
													"value": {
														"value": "@item().BLOBCONTAINER",
														"type": "Expression"
													},
													"type": "String"
												},
												"EFFECTIVEINTERGATIONRUNTIME": {
													"value": {
														"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
														"type": "Expression"
													},
													"type": "String"
												},
												"ERROR_MESSAGE": {
													"value": {
														"value": "@activity('Copy data1').error",
														"type": "Expression"
													},
													"type": "String"
												},
												"EXECUTION_STATUS": {
													"value": {
														"value": "@activity('Copy data1').status",
														"type": "Expression"
													},
													"type": "String"
												},
												"EXECUTION_STATUS_CODE": {
													"value": {
														"value": "@activity('Copy data1').statuscode",
														"type": "Expression"
													},
													"type": "String"
												},
												"NO_PARALLELCOPIES": {
													"value": {
														"value": "@activity('Copy data1').output.usedParallelCopies",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"PIPELINENAME": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"ROWSCOPIED": {
													"value": {
														"value": "@activity('Copy data1').output.rowscopied",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"ROWSREAD": {
													"value": {
														"value": "@activity('Copy data1').output.rowsread",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"RUNID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"SINK_TYPE": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].sink.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"SOURCE": {
													"value": {
														"value": "@item().TABLENAME",
														"type": "Expression"
													},
													"type": "String"
												},
												"SOURCE_TYPE": {
													"value": {
														"value": "@activity('Copy data1').output.executiondetails[0].source.type",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERID": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERNAME": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERTIME": {
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"type": "String"
												},
												"TRIGGERTYPE": {
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_AZURE",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}